{"version":3,"sources":["Api.js","views/Car.js","views/AddCar.js","App.js","serviceWorker.js","index.js"],"names":["API","Car","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","hits","isLoading","error","_this2","setState","console","log","fetch","method","then","response","ok","json","data","catch","_this$state","react_default","a","createElement","message","className","map","hit","key","carro","marca","linea","modelo","descripcion","Component","Add","inputvalue","line","model","description","handleSubmit","bind","assertThisInitialized","event","headers","Accept","Content-Type","body","JSON","stringify","preventDefault","onSubmit","type","value","onChange","newValue","target","React","App","href","id","views_Car","AddCar","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e02fad37.chunk.js","sourcesContent":["//export const API = \"//probando3-725769318.us-west-2.elb.amazonaws.com\";\nexport const API = \"http://34.221.161.220:3000\";","import React, { Component } from 'react';\nimport{ API } from '../Api'\nconst DEFAULT_QUERY = \"/cars\"\nclass Car extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state ={\n            hits:[],\n            isLoading: false,\n            error: null,\n\n        };\n    }\n\n    componentDidMount() {\n        this.setState({ isLoading: true });\n        console.log(API)\n        fetch(API + DEFAULT_QUERY,{\n            method: 'GET', \n        })\n            .then(response => {\n                if(response.ok){\n                    return response.json();\n\n                }else {\n                    return response.json();\n                }\n\n            })\n            .then(data => {\n                console.log(data);\n                this.setState({ hits: data.response, isLoading: false })\n            })\n            .catch(error => this.setState({ error, isLoading: false }));\n    }\n    render() {\n       \n        const { hits, isLoading, error } = this.state;\n\n        if (error) {\n            return <p>{error.message}</p>;\n        }\n\n        if (isLoading) {\n            return <p>Loading ...</p>;\n        }\n\n        return (\n            \n            <div>\n                \n                <div className=\"row\">\n                    {hits.map(hit =>\n                        <div className=\"col s12 m6\" key={hit.carro}>\n                        <div className=\"card blue-grey darken-1\">\n                            <div className=\"card-content white-text\">\n                                <span className=\"card-title\">{hit.marca}</span>\n                                    <p> \n                                       {hit.linea}\n                                    </p>\n                                    <p>\n                                        {hit.modelo}\n                                    </p>\n                                    <p>\n                                        {hit.descripcion}\n                                    </p>\n                            </div>\n                        </div>\n                    </div>\n                    )}\n                </div>\n            </div>\n        );\n\n    }\n}\n\nexport default Car;\n","import React, { Component } from 'react';\n\nimport { API } from '../Api'\nconst DEFAULT_QUERY = \"/createcar\"\n\nclass Add extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            inputvalue: '',\n            line: '',\n            model: '',\n            description: '',\n            marca: ''\n        }\n\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n   \n\n    handleSubmit(event) {\n        console.log('Form line: ' + this.state.line);\n        console.log('Form model: ' + this.state.model);\n        console.log('Form description: ' + this.state.description);\n        console.log('Form marca: ' + this.state.marca);\n        if (this.state.line != '' && this.state.model != '' && this.state.description != '' && this.state.marca != '' ){\n        fetch(API+DEFAULT_QUERY, {\n            method: 'POST',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                line: this.state.line + \"\",\n                model: this.state.model + \"\",\n                description: this.state.description+ \"\",\n                marca: this.state.marca + \"\" })\n        });}\n        else {\n\n            console.log(\"hay que llenar los campo\")\n        }\n        event.preventDefault();\n    }\n\n    render() {\n        return (\n\n            <div className=\"col s5 offset-s3 z-depth-6 card-panel\">\n                <div className=\"container\">\n                <form onSubmit={this.handleSubmit}>\n                    <div className=\"row\">\n                        <label>Linea</label>\n                        <div className=\"input-field col s12\">\n                            <input type=\"text\" value={this.state.line} \n                                    onChange={(event, newValue) => this.setState({ line: event.target.value  })}\n                            />\n                            \n                        </div>\n                    </div>\n                    <div className=\"row\">\n                        <label>model</label>\n                        <div className=\"input-field col s12\">\n                            <input type=\"text\" value={this.state.model} \n                                    onChange={(event, newValue) => this.setState({ model: event.target.value })}\n                            />\n                     \n                        </div>\n                    </div>   \n                    <div className=\"row\">\n                        <label>Decription</label>\n                        <div className=\"input-field col s12\">\n                            <input type=\"text\" value={this.state.description}\n                                    onChange={(event, newValue) => this.setState({ description: event.target.value })}\n                            />\n                        </div>\n                    </div>\n                    <div className=\"row\">\n                        <label>Marca</label>\n                        <div className=\"input-field col s12\">\n                                <input type=\"text\" value={this.state.marca}\n                                    onChange={(event, newValue) => this.setState({ marca: event.target.value })}\n                            />\n                        </div>\n                    </div>  \n                        \n                    <input type=\"submit\" value=\"Submit\" />\n                </form>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Add;\n","import React, { Component } from 'react';\n\nimport './App.css';\nimport 'materialize-css/dist/css/materialize.min.css';\nimport Car from './views/Car'\nimport Add from './views/AddCar'\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n\n        <nav>\n          <div className=\"nav-wrapper\">\n            <a href=\"#\" className=\"brand-logo\">Logo</a>\n            <ul id=\"nav-mobile\" className=\"right hide-on-med-and-down\">\n              <li><a href=\"sass.html\">Sass</a></li>\n              <li><a href=\"badges.html\">Components</a></li>\n              <li><a href=\"collapsible.html\">JavaScript</a></li>\n            </ul>\n          </div>\n        </nav>\n        \n        <div className=\"container\"><Car /></div>\n        \n        <div className=\"container\"><Add /></div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}